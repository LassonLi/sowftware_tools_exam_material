question1： 4.1 Explore file permissions，vagrant can still cd /home/brian although I have su brian, then chmod -R 750 /home/brian
I check users group contains vagrant, nigel, brian
although I remove vagrant from users group, vagrant can just cd /home/brian


question2: 4.1 Explore file permissions
$:su brian
$:ls -l ~/readme.txt
-rw-r--r-- 1 brian brian 12 Feb  8 17:13 /home/brian/readme.txt

$:ls -l ~/private/secret.txt
-rw-r--r-- 1 brian brian 15 Feb  8 17:15 /home/brian/private/secret.txt

Although I change users as the group to /home/brian. Why it didn't show me users is the group of these files. Only brian brian?


question3: 4.1 Explore file permissions, after 
$:su nigel
$:./message-brian "Hi from Nigel!"
$:ls -l
-rw-r--r-- 1 brian nigel    15 Feb  8 17:30 messages.txt

The exercise tell me user and group are brian brian. But I only see brian nigel


question4: 4.2 shell scripting: strict mode exercise.
在vagrant身份跑
$:ls -l ../brian/ | ping -c 3 google.com
ls: cannot open directory '../brian/': Permission denied
PING google.com (216.58.204.78) 56(84) bytes of data.
64 bytes from lhr25s13-in-f14.1e100.net (216.58.204.78): icmp_seq=1 ttl=114 time=9.22 ms
64 bytes from lhr25s13-in-f14.1e100.net (216.58.204.78): icmp_seq=2 ttl=114 time=9.36 ms
64 bytes from 216.58.204.78: icmp_seq=3 ttl=114 time=8.98 ms

$:$?
-bash: 0: command not found


if with set -euo pipefail
$:$?
-bash: 2: command not found
 

 -----------------------------------

shell exercise

#!/bin/sh

# Function to compile a C program
compile() {
    # Check if the file exists with or without the .c extension
    if [ -f "$1.c" ]; then
        gcc -Wall -std=c11 -g "$1.c" -o "$1"
        return $? # Return the exit status of gcc
    else
        echo "Error: Source file $1.c does not exist."
        return 1 # Return a nonzero exit status
    fi
}

# Function to run a program
run() {
    # Check if the executable exists
    if [ -x "$1" ]; then
        ./"$1"
        return $? # Return the exit status of the program
    else
        echo "Error: Executable $1 does not exist."
        return 1 # Return a nonzero exit status
    fi
}

# Function to print usage information
usage() {
    echo "Usage: $0 [compile|run|build] FILENAME (without extension)"
    exit 1
}

# Main script starts here
case "$1" in
    compile)
        if [ -z "$2" ]; then
            echo "Error: No filename provided for compilation."
            usage
        else
            # Remove the .c extension if provided
            FILENAME=$(echo "$2" | sed 's/\.c$//')
            compile "$FILENAME"
        fi
        ;;
    run)
        if [ -z "$2" ]; then
            echo "Error: No filename provided to run."
            usage
        else
            FILENAME=$(echo "$2" | sed 's/\.c$//')
            run "$FILENAME"
        fi
        ;;
    build)
        if [ -z "$2" ]; then
            echo "Error: No filename provided for build."
            usage
        else
            FILENAME=$(echo "$2" | sed 's/\.c$//')
            compile "$FILENAME"
            # If compile succeeds, run the program
            if [ $? -eq 0 ]; then
                run "$FILENAME"
            fi
        fi
        ;;
    *)
        usage
        ;;
esac

