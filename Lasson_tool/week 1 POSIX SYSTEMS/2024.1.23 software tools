2024.1.23 software tools

/etc is where POSIX programs typically store global settings)

/tmp folder is local to each machine.

/bin stands for binaries, that is programs that you can run. Have a look with ls /bin: there will be a lot of commands in here, including ls itself. Indeed you can find out where a program is with which, so which ls will show you /usr/bin/ls for example.

/usr is a historical accident and a bit of a mess. A short history is on this stackexchange question but essentially, in the earliest days,

/bin was only for binaries needed to start the system - or at least the most important binaries that needed to live on the faster of several disk drives, like your shell.

/usr/bin was where most binaries lived which were available globally, for example across all machines in an organisation.

/usr/local/bin was for binaries installed by a local administrator, for example for a department within an organisation.

-------------------------------------


another teminal: 
$: pass show -c bristol  (这一行不知道咋搞，不明白为什么能够有密码复制到 clipboard)
copied bristol to clipboard

$: grep ench$ /usr/share/dict/cracklib-small

$: grep ^..ench..$ /usr/share/dict/cracklib-small

$: grep ^..ench..$ /usr/share/dict/cracklib-small

-------------------------------------------


question 3. in lab machine. For vagrant, who is guest, who is host? (Answer: vagrant@debian12 is guest, lab machine is host)

question 4: why I can use ssh lab in cmd. but can't use ssh lab in xshell?
老师说 xshell里边找到的 .ssh文件夹和 cmd里边找到的 .ssh文件夹是不一样。
所以在xshell里，我目前只能够ssh -A -J me23202@seis.bris.ac.uk me23202@rd-mvb-linuxlab.bristol.ac.uk

question 5: shell expansion, what is the third way to output *

question 6: regular exercise 2: no matter how I use wc -l or grep -c, I just get the same result. although I use the /home/vagrant/example.txt produced from chatgpt which shows a different result. But I think chatgpt is wrong.
answer: 两位助教的说法，在同一目录建立一个 example.txt 和 example_1.txt。 下边是命令以及相应的结果

vagrant@debian12:~$ grep -c 'apple' *.txt
example_1.txt:2
example.txt:3

vagrant@debian12:~$ grep 'apple' *.txt | wc -l
5


question 7: regular exercise 4: ^[A-Z]{2}[0-9] ?[0-9][A-Z]{2}$
------------------------------------------

/c/Users/User/.ssh/id_ed25519.

下边这条命令，当我配置好了 ssh key之后，可以直接在手提电脑，连接到mvb电脑
ssh -A -J me23202@seis.bris.ac.uk me23202@rd-mvb-linuxlab.bristol.ac.uk

vagrant up
vagrant ssh

exit
关机前，或退出远程lab machine前，一定要
vagrant halt

-----------------------------------------------
regular exercise 5:
^(([A-Z]{1,2}[0-9][A-Z0-9]?|ASCN|STHL|TDCU|BBND|[BFS]IQQ|PCRN|TKCA) ?[0-9][A-Z]{2}|BFPO ?[0-9]{1,4}|(KY[0-9]|MSR|VG|AI)[ -]?[0-9]{4}|[A-Z]{2} ?[0-9]{2}|GE ?CX|GIR ?0A{2}|SAN ?TA1)$

it can break into 下边几行是属于平行的关系，就是说postcode只要符合其中一行规则就够了
([A-Z]{1,2}[0-9][A-Z0-9]?|ASCN|STHL|TDCU|BBND|[BFS]IQQ|PCRN|TKCA) ?[0-9][A-Z]{2}

BFPO ?[0-9]{1,4}

(KY[0-9]|MSR|VG|AI)[ -]?[0-9]{4}

[A-Z]{2} ?[0-9]{2}

GE ?CX

GIR ?0A{2}

SAN ?TA1



