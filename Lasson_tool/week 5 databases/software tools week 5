software tools 2024/2/19

---------------------------------

ER diagram exercise: Reading an ER diagram

question 1: I am not so familiar with the actual diagram especially when it has number? Also I can't figure out the direction of relationship.(who belongs to who, who direct who, who enrol who)

1.every unit can have 0 or more students; every student can have 0 or more unit.
every unit must have one lecturer; every lecturer have 0 or more unit.
every lecturer belongs to 0 or 1 RGroup; every RGroup have 1 or more lecturer

1.mandatory:belongs to; directs
optional: enrols

2.many-many: unit-students, lecturer-Rgroup
one-many: unit-lecturer
one-one: None

3.

------------------
Bristol elections

1.List the names of all parties that stood in the election, ordered alphabetically by name.

SELECT DISTINCT Party.name AS party
FROM Candidate
INNER JOIN Party ON Candidate.party = Party.id
ORDER BY Party.name DESC
LIMIT 20;


2.List the names of all parties that stood in the Bedminster ward.

SELECT DISTINCT Party.name AS party,
Ward.name AS ward
FROM Candidate
INNER JOIN Party ON Candidate.party = Party.id
INNER JOIN Ward ON Candidate.Ward = Ward.id
WHERE Ward.name LIKE '%Bedminster%';

3.How many votes did Labour get in the Stockwood ward?

SELECT Party.name AS party,
Ward.name AS ward,
SUM(Candidate.votes) as votes
FROM Candidate
INNER JOIN Party ON Candidate.party = Party.id
INNER JOIN Ward ON Candidate.Ward = Ward.id
WHERE Ward.name LIKE '%Stockwood%'
AND Party.name LIKE '%Labour%'
GROUP BY party;


4.List the names, parties and number of votes obtained for all candidates in the Southville ward. Order the candidates by number of votes obtained descending (winner comes first).

SELECT Party.name AS party,
Ward.name AS ward,
Candidate.name AS candidate,
Candidate.votes as votes
FROM Candidate
INNER JOIN Party ON Candidate.party = Party.id
INNER JOIN Ward ON Candidate.Ward = Ward.id
WHERE Ward.name LIKE '%Southville%'
ORDER BY votes DESC;

5.List the name, party and number of votes obtained for the winner only in the Knowle ward. (Hint: apart from changing the ward name, you only need one small modification to the statement from the last question. You may assume no ties.)

SELECT Party.name AS party,
Ward.name AS ward,
Candidate.name AS candidate,
Candidate.votes as votes
FROM Candidate
INNER JOIN Party ON Candidate.party = Party.id
INNER JOIN Ward ON Candidate.Ward = Ward.id
WHERE Ward.name LIKE '%Knowle%'
ORDER BY votes DESC
LIMIT 1;

-----------------------
uk census

1.The university of Bristol is situated in the Cabot ward (ward names are not always distinct, but this one is). Find the names and codes of the CLU, region and country containing the Cabot ward (CLU = county level unit = "row in County table").

SELECT County.code AS County_code,
County.name AS County_name,
Country.name AS Country_name,
Country.code AS Country_code,
Region.name AS Region_name,
Region.code AS Region_code,
Ward.name AS Ward_name
FROM County
INNER JOIN Ward ON County.code = Ward.parent
INNER JOIN Region ON County.parent = Region.code
INNER JOIN Country ON County.country = Country.code
WHERE Ward.name = 'Cabot';


3.Find the number of women in occupation class 1 (managers etc.) in the Cabot ward. You may use ward code for Cabot that you found in the first query and the occupation id 1 directly - you do not need any JOINs for this query.

SELECT Statistic.wardId,
Ward.name AS Ward_name,
Statistic.gender,
Occupation.name AS Occupation_name,
Statistic.data
FROM Statistic
INNER JOIN Ward ON Statistic.wardId = Ward.code
INNER JOIN Occupation ON Statistic.occId = Occupation.id
WHERE Statistic.gender = 1 AND Ward.name = 'Cabot' 
AND Occupation.id = 1;


4.For the Stoke Bishop ward (E05002003), list the 9 occupation class names and the number of men in each occupation. Your table should have two columns called name and number. You can use the provided ward code, you do not need to join on the ward name.

SELECT Statistic.wardId,
Ward.name AS Ward_name,
Statistic.gender,
Occupation.name AS name,
Statistic.data AS number
FROM Statistic
INNER JOIN Ward ON Statistic.wardId = Ward.code
INNER JOIN Occupation ON Statistic.occId = Occupation.id
WHERE Statistic.gender = 0 AND Ward.code = 'E05002003';

--------------------------------------
Intermediate SQL


1.How many votes were cast in all of Bristol in the 2014 elections?  (I get 0)

SELECT Ward.id AS ward_id,
Ward.name AS ward_name,
SUM(Candidate.votes) AS total_votes
FROM Ward
JOIN Candidate ON Ward.id = Candidate.ward
WHERE Ward.name LIKE '%Bristol%';


SELECT Ward.id AS ward_id,
Ward.name AS ward_name,
SUM(Candidate.votes) AS total_votes
FROM Ward
JOIN Candidate ON Ward.id = Candidate.ward
WHERE Ward.name LIKE '%Windmill Hill%';


2.How many votes were cast in the 'Windmill Hill' ward and what percentage of the electorate in this ward does this represent? Your statement should produce a table with one row and two columns called 'votes' and 'percentage'.
(我保证votes 3818, electorate 9449是对的，下边命令计算出的percentage 40.40)


SELECT votes,
(votes / Ward.electorate) * 100.0 AS percentage
FROM (
SELECT SUM(Candidate.votes) AS votes,
Ward.id AS id
FROM Ward
JOIN Candidate ON Ward.id = Candidate.ward
WHERE Ward.name LIKE '%Windmill Hill%'
) as subquery
JOIN Ward ON subquery.id = Ward.id;

# 这是查看 Windmill Hill 地区总共有多少选票
SELECT SUM(Candidate.votes) AS votes,
Ward.id AS id
FROM Ward
JOIN Candidate ON Ward.id = Candidate.ward
WHERE Ward.name LIKE '%Windmill Hill%'
GROUP BY Ward.id;

# 查看Windmill Hill有多少electorate
SELECT * FROM Ward
WHERE Ward.name LIKE '%Windmill Hill%';


3.

SELECT Candidate_name,
subquery.votes AS votes,
subquery.Party_name,
(subquery.votes / total_votes.total) * 100.0 AS percentage
FROM (
SELECT Candidate.votes AS votes,
Candidate.party AS Party_id,
Candidate.name AS Candidate_name,
Party.name AS Party_name,
Ward.id AS Ward_id
FROM Ward
JOIN Candidate ON Ward.id = Candidate.ward
JOIN Party ON Candidate.Party = Party.id
WHERE Ward.name LIKE '%Southville%'
) as subquery
JOIN (
SELECT SUM(Candidate.votes) AS total,
Ward.id AS Ward_id
FROM Ward
JOIN Candidate ON Ward.id = Candidate.ward
WHERE Ward.name LIKE '%Southville%'
) AS total_votes ON subquery.Ward_id = total_votes.Ward_id
ORDER BY percentage DESC
;


# 这是查Southville这个地区所有Candidate的名字以及votes数量
SELECT Candidate.votes AS votes,
Candidate.party AS Party_id,
Candidate.name AS Candidate_name,
Party.name AS Party_name,
Ward.id AS Ward_id
FROM Ward
JOIN Candidate ON Ward.id = Candidate.ward
JOIN Party ON Candidate.Party = Party.id
WHERE Ward.name LIKE '%Southville%';


4.
SELECT subquery.votes,
subquery.Party_name,
subquery.Ward_name,
total_votes.total,
(subquery.votes / total_votes.total) * 100.0 AS percentage
FROM (
  SELECT SUM(Candidate.votes) AS votes,
  Party.name AS Party_name,
  Ward.id AS Ward_id,
  Ward.name AS Ward_name
  FROM Candidate
  LEFT JOIN Ward ON Ward.id = Candidate.ward
  LEFT JOIN Party ON Candidate.Party = Party.id
  WHERE Party.name LIKE '%Conservative%'
  GROUP BY Candidate.Party, Candidate.ward
  ) AS subquery
LEFT JOIN (
  SELECT SUM(Candidate.votes) AS total,
  Ward.id AS Ward_id
  FROM Candidate
  JOIN Ward ON Ward.id = Candidate.ward
  GROUP BY Candidate.Ward
) AS total_votes ON subquery.Ward_id = total_votes.Ward_id
;


# 这是查每个 Ward的 Conservative party 的votes数量
SELECT SUM(Candidate.votes) AS votes,
Party.name AS Party_name,
Ward.name AS Ward_name
FROM Candidate
LEFT JOIN Ward ON Ward.id = Candidate.ward
LEFT JOIN Party ON Candidate.Party = Party.id
WHERE Party.name LIKE '%Conservative%'
GROUP BY Candidate.Party, Candidate.ward;

# 这是查 每个 Ward 的总 投票数
SELECT SUM(Candidate.votes) AS total,
Ward.id AS Ward_id
FROM Candidate
JOIN Ward ON Ward.id = Candidate.ward
GROUP BY Candidate.Ward;

5.

SELECT rank,
Candidate_party
FROM (
  SELECT SUM(Candidate.votes) AS votes,
  Party.name AS Candidate_party,
  Ward.name AS Ward_name,
  RANK() OVER (ORDER BY SUM(Candidate.votes) DESC) AS rank
  FROM Candidate
  JOIN Ward ON Candidate.ward = Ward.id
  JOIN Party ON Candidate.party = Party.id
  WHERE Ward.name = 'Whitchurch Park'
  GROUP BY Candidate.party
  ) AS subquery
WHERE Candidate_party = 'Labour';


# 首先查 Whitchurch Park 这个地区的所有 Party的投票数量以及排名
SELECT SUM(Candidate.votes) AS votes,
Party.name AS Candidate_party,
Ward.name AS Ward_name,
RANK() OVER (ORDER BY SUM(Candidate.votes) DESC) AS rank
FROM Candidate
JOIN Ward ON Candidate.ward = Ward.id
JOIN Party ON Candidate.party = Party.id
WHERE Ward.name = 'Whitchurch Park'
GROUP BY Candidate.party;


6.

SELECT SUM(Candidate.votes) AS votes,
Party.name AS party
FROM Candidate
LEFT JOIN Party ON Candidate.Party = Party.id
GROUP BY Candidate.Party;

7.
SELECT GreenVotes.ward AS ward_name,
GreenVotes.votes AS Green_votes,
LabourVotes.votes AS Labour_votes,
(GreenVotes.votes - LabourVotes.votes) AS difference
FROM (
SELECT SUM(Candidate.votes) AS votes,
Party.name AS party,
Ward.name AS ward
FROM Candidate
LEFT JOIN Party ON Candidate.Party = Party.id
LEFT JOIN Ward ON Candidate.ward = Ward.id
WHERE Party.name = 'Green'
GROUP BY Candidate.Party, Candidate.ward
) AS GreenVotes
JOIN (
SELECT SUM(Candidate.votes) AS votes,
Party.name AS party,
Ward.name AS ward
FROM Candidate
LEFT JOIN Party ON Candidate.Party = Party.id
LEFT JOIN Ward ON Candidate.ward = Ward.id
WHERE Party.name = 'Labour'
GROUP BY Candidate.Party, Candidate.ward
) AS LabourVotes
ON GreenVotes.ward = LabourVotes.ward
WHERE GreenVotes.votes > LabourVotes.votes;